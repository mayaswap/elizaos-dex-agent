### elizaOS Environment Variables ###
# To get started, copy this file to .env, or make a .env and add the settings you'd like to override
# Please read the comments for each of the configurations

# The only thing you ABSOLUTELY NEED to get up and running is one of the model provider keys, 
# i.e. OPENAI_API_KEY or ANTHROPIC_API_KEY, or setup the local-ai plugin
# Everything else is optional, and most settings and secrets can be configured in your agent or through the GUI
# For multi-agent, each agent will need keys for the various services it is connected to
# You can use the .env or environment variables generally for shared keys, such as to model providers, 
# database, etc, with scoped keys for services such as Telegram, Discord, etc

### MODEL PROVIDER KEYS ###
# Eliza is compatible with a wide array of model providers. Many have OpenAI compatible APIs, 
# and you can use them by overriding the base URL

# NOTE: You will need a provider that provides embeddings. So even if you use Claude, you will 
# need to get embeddings using another provider, for example openai or our local-ai plugin

# OpenAI Configuration
OPENAI_API_KEY=
# Use this to override the openai endpoint, for example for using together.ai, fireworks or other providers
# OPENAI_BASE_URL=

# Anthropic Configuration
# By default in most of our starter kits, Anthropic will take precedence over OpenAI in handling requests
# Anthropic does not handle embeddings, so you may wish to use OpenAI for that, even while Claude is handling text generation
ANTHROPIC_API_KEY=sk-ant-api03-AXHfxhLpJGLh-RY5mGrZhB7-JDqGDiZxNqOBqWZtZa4A0gnEt1RJx4i8L7WLXVjQjKYKdY5YIl_4_Xo28qfOVA-J1Jm2wAA

# Cloudflare AI
CLOUDFLARE_GW_ENABLED=
CLOUDFLARE_AI_ACCOUNT_ID=
CLOUDFLARE_AI_GATEWAY_ID=

### LOCAL AI CONFIGURATION ###
USE_LOCAL_AI=
USE_STUDIOLM_TEXT_MODELS=
USE_OLLAMA_TEXT_MODELS=

# Ollama Configuration
OLLAMA_API_ENDPOINT=
OLLAMA_MODEL=
USE_OLLAMA_EMBEDDING=
OLLAMA_EMBEDDING_MODEL=
OLLAMA_SMALL_MODEL=
OLLAMA_MEDIUM_MODEL=
OLLAMA_LARGE_MODEL=

# StudioLM Configuration
STUDIOLM_SERVER_URL=
STUDIOLM_SMALL_MODEL=
STUDIOLM_MEDIUM_MODEL=
STUDIOLM_EMBEDDING_MODEL=

### DATABASE ###
# By default, Eliza will use a local pglite instance
# If you fill out POSTGRES_URL, the agent will connect to your postgres instance instead of using the local path

# You can override the pglite data directory

# Fill this out if you want to use Postgres
POSTGRES_URL=

### LOGGING CONFIGURATION ###
# Logging Configuration (supported: fatal, error, warn, info, debug, trace | default: info)
LOG_LEVEL=

# Sentry Configuration
SENTRY_LOGGING=true
SENTRY_DSN=
SENTRY_ENVIRONMENT=
SENTRY_TRACES_SAMPLE_RATE=
SENTRY_SEND_DEFAULT_PII=

### API KEYS ###
# Many services require API keys to function
# Most plugins will indicate what is needed in their README.md and throw helpful errors if they are missing
BIRDEYE_API_KEY=
JUPITER_API_KEY=
HELIUS_API_KEY=
COINMARKETCAP_API_KEY=
ZEROEX_API_KEY=
COINGECKO_API_KEY=

### SINGLE AGENT VARIABLES ###
# If you are running multiple agents, you will need to configure these variables in the agent secrets 
# (available in the GUI) OR you can namespace the secrets and connect them up in your character definition

# Example: 
# settings: {
#   process.env.COMMUNITY_MANAGER_DISCORD_API_TOKEN
# }

# Note: See below for multi-agent examples

# Discord Configuration
DISCORD_APPLICATION_ID=
DISCORD_API_TOKEN=

# Telegram Configuration
TELEGRAM_BOT_TOKEN=7832529066:AAFXtf1Rcs1qSU-J8Kt7rj7L3kbFYPOyLGY

# Twitter Configuration
TWITTER_USERNAME=
TWITTER_PASSWORD=
TWITTER_EMAIL=
TWITTER_ENABLE_POST_GENERATION=
TWITTER_INTERACTION_ENABLE=
TWITTER_TIMELINE_ENABLE=
TWITTER_SPACES_ENABLE=
TWITTER_TIMELINE_MODE=
TWITTER_TIMELINE_POLL_INTERVAL=

# EVM Configuration
EVM_PRIVATE_KEY=
EVM_CHAINS=mainnet,sepolia,base,arbitrum,polygon
EVM_PROVIDER_URL=

# Solana Configuration
SOLANA_PUBLIC_KEY=
SOLANA_PRIVATE_KEY=

### MULTI-AGENT CONFIGURATION ###
# Settings for The Org
# The Org is an example of a multi-agent swarm
# Available here: https://github.com/elizaOS/the-org
# This is an example of how environment variables can be scoped per-project

# Community Manager
COMMUNITY_MANAGER_DISCORD_APPLICATION_ID=
COMMUNITY_MANAGER_DISCORD_API_TOKEN=

# Social Media Manager
SOCIAL_MEDIA_MANAGER_DISCORD_APPLICATION_ID=
SOCIAL_MEDIA_MANAGER_DISCORD_API_TOKEN=

# Liaison
LIAISON_DISCORD_APPLICATION_ID=
LIAISON_DISCORD_API_TOKEN=

# Project Manager
PROJECT_MANAGER_DISCORD_APPLICATION_ID=
PROJECT_MANAGER_DISCORD_API_TOKEN=

# Developer Relations
DEV_REL_DISCORD_APPLICATION_ID=
DEV_REL_DISCORD_API_TOKEN=
DEVREL_IMPORT_KNOWLEDGE=true

# Investment Manager
INVESTMENT_MANAGER_DISCORD_APPLICATION_ID=
INVESTMENT_MANAGER_DISCORD_API_TOKEN=


### Additional Environment Variables from Runtime ###
# Variables found in process.env that were not in the template
TERM_PROGRAM=vscode
ANDROID_HOME=/Users/devaprasad/Library/Android/sdk
TERM=xterm-256color
SHELL=/bin/zsh
HOMEBREW_REPOSITORY=/opt/homebrew
TMPDIR=/var/folders/fz/7lnthyd5791fv_jshk0t9wrh0000gn/T/
TERM_PROGRAM_VERSION=1.0.0
CURSOR_TRACE_ID=9c039f26d59e47a7a6be3e3444a015ea
ORIGINAL_XDG_CURRENT_DESKTOP=undefined
MallocNanoZone=0
PNPM_HOME=/Users/devaprasad/Library/pnpm
USER=devaprasad
SWIFTLY_HOME_DIR=/Users/devaprasad/.swiftly
COMMAND_MODE=unix2003
SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.z9U0RgFanH/Listeners
__CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0
PAGER=head -n 10000 | cat
PATH=/Users/devaprasad/.bun/bin:/Users/devaprasad/.bun/bin:/Users/devaprasad/.bun/bin:/Users/devaprasad/.bun/bin:/Users/devaprasad/.codeium/windsurf/bin:/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin:/Users/devaprasad/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/devaprasad/.codeium/windsurf/bin:/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin:/Users/devaprasad/Library/pnpm:/Users/devaprasad/.local/share/solana/install/active_release/bin:/Users/devaprasad/.swiftly/bin:/Users/devaprasad/.cargo/bin:/Users/devaprasad/Library/Android/sdk/tools:/Users/devaprasad/Library/Android/sdk/platform-tools:/Applications/Docker.app/Contents/Resources/bin:/Users/devaprasad/Library/Android/sdk/tools:/Users/devaprasad/Library/Android/sdk/platform-tools:/Applications/Docker.app/Contents/Resources/bin
__CFBundleIdentifier=com.todesktop.230313mzl4w4u92
PWD=/Users/devaprasad/Desktop/Organized/Projects/elizaos-dex-agent
DISABLE_AUTO_UPDATE=true
JAVA_HOME=/Applications/Android Studio.app/Contents/jbr/Contents/Home
LANG=C.UTF-8
XPC_FLAGS=0x0
XPC_SERVICE_NAME=0
npm_config_yes=true
SHLVL=2
HOME=/Users/devaprasad
VSCODE_GIT_ASKPASS_MAIN=/Applications/Cursor.app/Contents/Resources/app/extensions/git/dist/askpass-main.js
HOMEBREW_PREFIX=/opt/homebrew
PIP_NO_INPUT=true
LOGNAME=devaprasad
VSCODE_GIT_IPC_HANDLE=/var/folders/fz/7lnthyd5791fv_jshk0t9wrh0000gn/T/vscode-git-3d2b773651.sock
COMPOSER_NO_INTERACTION=1
BUN_INSTALL=/Users/devaprasad/.bun
VSCODE_GIT_ASKPASS_NODE=/Applications/Cursor.app/Contents/Frameworks/Cursor Helper (Plugin).app/Contents/MacOS/Cursor Helper (Plugin)
GIT_ASKPASS=/Applications/Cursor.app/Contents/Resources/app/extensions/git/dist/askpass.sh
INFOPATH=/opt/homebrew/share/info:/opt/homebrew/share/info:
HOMEBREW_CELLAR=/opt/homebrew/Cellar
SWIFTLY_BIN_DIR=/Users/devaprasad/.swiftly/bin
OSLogRateLimit=64
COLORTERM=truecolor
_=/usr/local/bin/elizaos
NODE_OPTIONS=--no-deprecation
NODE_NO_WARNINGS=1
PGLITE_DATA_DIR=/Users/devaprasad/Desktop/Organized/Projects/elizaos-dex-agent/.eliza/.elizadb