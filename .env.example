# ========================================
# ELIZAOS DEX AGENT - DEPLOYMENT CONFIG
# ========================================

# ----------------------------------------
# DEPLOYMENT CONFIGURATION
# ----------------------------------------
# Deployment mode: web, telegram, discord, all
DEPLOYMENT_MODE=web

# Server configuration
PORT=3000
HOST=0.0.0.0
NODE_ENV=production

# Public URLs (auto-detected on Railway/Heroku)
# RAILWAY_STATIC_URL=https://your-app.railway.app
# HEROKU_APP_NAME=your-app-name

# ----------------------------------------
# AI CONFIGURATION (REQUIRED)
# ----------------------------------------
# OpenAI API Key (for Claude/GPT models)
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API Key (recommended for Claude)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ----------------------------------------
# TELEGRAM BOT (Optional)
# ----------------------------------------
# Get from @BotFather on Telegram
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# ----------------------------------------
# DISCORD BOT (Optional - Future)
# ----------------------------------------
# DISCORD_APPLICATION_ID=your_discord_app_id
# DISCORD_API_TOKEN=your_discord_bot_token

# ----------------------------------------
# DATABASE CONFIGURATION
# ----------------------------------------
# For production, use PostgreSQL (Railway provides this)
POSTGRES_URL=postgresql://user:password@host:port/database

# For development, SQLite is used automatically
SQLITE_DATA_DIR=./data

# ----------------------------------------
# BLOCKCHAIN CONFIGURATION
# ----------------------------------------
# PulseChain RPC (default: public RPC)
PULSECHAIN_RPC_URL=https://rpc.pulsechain.com

# 9MM DEX Configuration
DEX_SUBGRAPH_URL=https://graph.9mm.pro/subgraphs/name/pulsechain/9mm-v3-latest
DEX_API_URL=https://api.9mm.pro

# Contract addresses (pre-configured for 9MM)
V2_FACTORY_ADDRESS=0x...
V3_FACTORY_ADDRESS=0x...
ROUTER_ADDRESS=0x...
POSITION_MANAGER_ADDRESS=0x...

# ----------------------------------------
# SECURITY CONFIGURATION
# ----------------------------------------
# Encryption key for wallet storage (32 characters)
WALLET_ENCRYPTION_KEY=your_32_character_encryption_key_here

# API rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ----------------------------------------
# MONITORING & LOGGING
# ----------------------------------------
# Log level: error, warn, info, debug
LOG_LEVEL=info

# Enable performance monitoring
ENABLE_METRICS=true
ENABLE_MONITORING_DASHBOARD=true

# ----------------------------------------
# FEATURE FLAGS
# ----------------------------------------
# Enable/disable features
ENABLE_TRADING=true
ENABLE_WALLET_CREATION=true
ENABLE_PRICE_ALERTS=true
ENABLE_PORTFOLIO_TRACKING=true

# ----------------------------------------
# DEVELOPMENT ONLY
# ----------------------------------------
# Debug mode (never use in production)
DEBUG_MODE=false

# Test mode (uses testnet)
TEST_MODE=false

# ========================================
# DEPLOYMENT INSTRUCTIONS
# ========================================
#
# FOR RAILWAY:
# 1. Create new project on Railway
# 2. Connect your GitHub repo
# 3. Add these environment variables in Railway dashboard
# 4. Set DEPLOYMENT_MODE=web (or telegram/all)
# 5. Deploy!
#
# FOR HEROKU:
# 1. heroku create your-app-name
# 2. heroku config:set KEY=VALUE (for each env var)
# 3. git push heroku main
#
# FOR VERCEL:
# 1. vercel --prod
# 2. Add environment variables in Vercel dashboard
#
# REQUIRED VARIABLES:
# - OPENAI_API_KEY or ANTHROPIC_API_KEY
# - DEPLOYMENT_MODE
# - PORT (auto-set by most platforms)
#
# OPTIONAL BUT RECOMMENDED:
# - POSTGRES_URL (for production database)
# - TELEGRAM_BOT_TOKEN (for Telegram bot)
# - WALLET_ENCRYPTION_KEY (for secure wallets)
#
# ======================================== 